-- creating and inserting tuples
CREATE TABLE CUSTOMER (CUSTID INT(5), CUSTNAME VARCHAR(15),PRIMARY KEY(CUSTID));
INSERT INTO CUSTOMER VALUE (1,'JOHN');
INSERT INTO CUSTOMER VALUE (2,'SMITH');
INSERT INTO CUSTOMER VALUE (3,'RICKY');
INSERT INTO CUSTOMER VALUE (4,'WALSH');
INSERT INTO CUSTOMER VALUE (5,'STEFEN');
INSERT INTO CUSTOMER VALUE (6,'FLEMING');
INSERT INTO CUSTOMER VALUE (7,'THOMSON');
INSERT INTO CUSTOMER VALUE (8,'DAVID');
SELECT * FROM CUSTOMER;
CREATE TABLE PRODUCT (PID INT(5),PNAME VARCHAR(15),PPRICE INT(8),PRIMARY KEY(PID));
INSERT INTO PRODUCT VALUE (1,'TELEVISION',19000);
INSERT INTO PRODUCT VALUE (2,'DVD',3600);
INSERT INTO PRODUCT VALUE (3,'WASHING MACHINE',7600);
INSERT INTO PRODUCT VALUE (4,'COMPUTER',35900);
INSERT INTO PRODUCT VALUE (5,'IPOD',3210);
INSERT INTO PRODUCT VALUE (6,'PANASONIC PHONE',2100);
INSERT INTO PRODUCT VALUE (7,'CHAIR',360);
INSERT INTO PRODUCT VALUE (8,'TABLE',490);
INSERT INTO PRODUCT VALUE (9,'SOUND SYSTEM',12050);
INSERT INTO PRODUCT VALUE (10,'HOME THEATRE',19350);
SELECT * FROM PRODUCT;
CREATE TABLE ORDERS (OID INT(5),CUSTID INT(5),ORDATE DATE,PRIMARY KEY(OID),FOREIGN KEY(CUSTID) REFERENCES CUSTOMER(CUSTID));
INSERT INTO ORDERS VALUE (1,4,'2005-01-10');
INSERT INTO ORDERS VALUE (2,2,'2006-02-10');
INSERT INTO ORDERS VALUE (3,3,'2005-03-20');
INSERT INTO ORDERS VALUE (4,3,'2006-03-10');
INSERT INTO ORDERS VALUE (5,1,'2007-04-05');
INSERT INTO ORDERS VALUE (6,7,'2006-12-13');
INSERT INTO ORDERS VALUE (7,6,'2008-03-13');
INSERT INTO ORDERS VALUE (8,6,'2004-11-29');
INSERT INTO ORDERS VALUE (9,5,'2005-01-13');
INSERT INTO ORDERS VALUE (10,1,'2007-12-12');
SELECT * FROM ORDERS;
CREATE TABLE ORDER_DETAILS (ODID INT(5),OID INT(5),PID INT(5),QUANTITY INT(5),FOREIGN KEY(OID) REFERENCES ORDERS(OID),FOREIGN KEY(PID) REFERENCES PRODUCT(PID));
INSERT INTO ORDER_DETAILS VALUES (1,1,3,1);
INSERT INTO ORDER_DETAILS VALUES (2,1,2,3);
INSERT INTO ORDER_DETAILS VALUES (3,2,10,2);
INSERT INTO ORDER_DETAILS VALUES (4,3,7,10);
INSERT INTO ORDER_DETAILS VALUES (5,3,4,2);
INSERT INTO ORDER_DETAILS VALUES (6,3,5,4);
INSERT INTO ORDER_DETAILS VALUES (7,4,3,1);
INSERT INTO ORDER_DETAILS VALUES (8,5,1,2);
INSERT INTO ORDER_DETAILS VALUES (9,5,2,1);
INSERT INTO ORDER_DETAILS VALUES (10,6,5,1);
INSERT INTO ORDER_DETAILS VALUES (11,7,6,1);
INSERT INTO ORDER_DETAILS VALUES (12,8,10,2);
INSERT INTO ORDER_DETAILS VALUES (13,8,3,1);
INSERT INTO ORDER_DETAILS VALUES (14,9,10,3);
INSERT INTO ORDER_DETAILS VALUES (15,10,1,1);
SELECT * FROM ORDER_DETAILS;


-- 1. Fetch all the Customer Details along with the product names that the customer has ordered.
SELECT CUSTOMER.*,PRODUCT.PNAME FROM ORDER_DETAILS LEFT JOIN ORDERS ON ORDER_DETAILS.OID=ORDERS.OID
LEFT JOIN PRODUCT ON ORDER_DETAILS.PID=PRODUCT.PID LEFT JOIN CUSTOMER ON ORDERS.CUSTID=CUSTOMER.CUSTID ORDER BY CUSTID;

-- 2. Fetch Order_Id, Ordered_Date, Total Price of the order (product price*qty).
SELECT ORDERS.OID,ORDERS.ORDATE,(PRODUCT.PPRICE*ORDER_DETAILS.QUANTITY)AS TOTALPRICE FROM ORDER_DETAILS LEFT JOIN ORDERS ON 
ORDER_DETAILS.OID=ORDERS.OID LEFT JOIN PRODUCT ON ORDER_DETAILS.PID=PRODUCT.PID;

-- 3.Fetch the Customer Name, who has not placed any order
SELECT CUSTOMER.CUSTNAME FROM ORDER_DETAILS LEFT JOIN ORDERS ON ORDER_DETAILS.OID=ORDERS.OID FULL OUTER JOIN CUSTOMER 
ON ORDERS.CUSTID=CUSTOMER.CUSTID WHERE CUSTOMER.CUSTID NOT IN(SELECT CUSTID FROM ORDERS);

SELECT * FROM CUSTOMER WHERE CUSTID NOT IN(SELECT CUSTID FROM ORDERS);

-- 4. Fetch the Product Details without any order(purchase)
SELECT PRODUCT. * FROM PRODUCT LEFT OUTER JOIN ORDER_DETAILS ON PRODUCT.PID=ORDER_DETAILS.PID WHERE PRODUCT.PID NOT IN
(SELECT PID FROM ORDER_DETAILS);

-- 5.Fetch the Customer name along with the total Purchase Amount
SELECT CUSTOMER.CUSTNAME,SUM(PRODUCT.PPRICE) FROM ORDER_DETAILS INNER JOIN ORDERS ON ORDER_DETAILS.OID=ORDERS.OID 
INNER JOIN PRODUCT ON ORDER_DETAILS.PID=PRODUCT.PID INNER JOIN CUSTOMER ON ORDERS.CUSTID=CUSTOMER.CUSTID 
GROUP BY CUSTOMER.CUSTNAME;

-- 6. Fetch the Customer details, who has placed the first and last order
SELECT CUSTOMER.*,ORDERS.ORDATE FROM ORDER_DETAILS INNER JOIN ORDERS ON ORDER_DETAILS.OID=ORDERS.OID INNER JOIN CUSTOMER ON 
ORDERS.CUSTID=CUSTOMER.CUSTID WHERE ORDERS.ORDATE=(SELECT MAX(ORDATE)FROM ORDERS) OR 
ORDERS.ORDATE=(SELECT MIN(ORDERS.ORDATE)FROM ORDERS)LIMIT 2;

-- 7. Fetch the customer details , who has placed more number of orders 
SELECT CUSTOMER.*,COUNT(*) AS TIMES FROM ORDERS LEFT JOIN CUSTOMER ON ORDERS.CUSTID=CUSTOMER.CUSTID GROUP BY CUSTOMER.CUSTID 
ORDER BY TIMES DESC;

-- 8. Fetch the customer details, who has placed multiple orders in the same year
SELECT CUSTOMER.*,COUNT(*) AS ORDER_S,EXTRACT(YEAR FROM ORDERS.ORDATE)AS YEARS FROM ORDERS INNER JOIN CUSTOMER 
ON ORDERS.CUSTID=CUSTOMER.CUSTID GROUP BY YEARS,CUSTOMER.CUSTID ORDER BY ORDER_S DESC LIMIT 1;

-- 9. Fetch the name of the month, in which more number of orders has been placed
SELECT COUNT(*) AS ORDERS,MONTHNAME(ORDATE) AS MONTHS FROM ORDERS GROUP BY MONTHS ORDER BY ORDERS DESC LIMIT 1;

-- 10. Fetch the maximum priced Ordered Product
SELECT PRODUCT.PNAME,PRODUCT.PPRICE FROM PRODUCT RIGHT JOIN ORDER_DETAILS ON PRODUCT.PID=ORDER_DETAILS.PID GROUP BY PRODUCT.PNAME,
PRODUCT.PPRICE ORDER BY PPRICE DESC LIMIT 1;
